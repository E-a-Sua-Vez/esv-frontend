steps:
  # build the container image
  - name: "gcr.io/cloud-builders/docker"
    args:
      ["build", "-f", "Dockerfile.$PROJECT_ID", "-t", "gcr.io/$PROJECT_ID/esv-frontend_test:${SHORT_SHA}", "."]
    # push the container image to Container Registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/esv-frontend_test:${SHORT_SHA}"]
    # deploy container image to Cloud Run
  - name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "beta",
        "run",
        "deploy",
        "esv-frontend_test",
        "--image",
        "gcr.io/$PROJECT_ID/esv-frontend_test:${SHORT_SHA}",
        "--region",
        "us-central1",
        "--allow-unauthenticated",
      ]
    env:
      - "PORT=8080"
      - "LOCATION=cl"
      - "NODE_ENV=prod"
      - "PROJECT_ID=easuavez"
    secretEnv:
      [
        'VITE_FIREBASE_API_KEY',
        'VITE_FIREBASE_APP_ID',
        'VITE_FIREBASE_MEASUREMENT_ID',
        'VITE_FIREBASE_MESSAGING_SENDER_ID',
        'VITE_MAPS_API_KEY',
        'VITE_RECAPTCHA_CHECK',
        'VITE_RECAPTCHA_INVISIBLE'
      ]
images:
  - gcr.io/$PROJECT_ID/esv-frontend_test
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/VITE_FIREBASE_API_KEY/versions/latest
    env: 'VITE_FIREBASE_API_KEY'
  - versionName: projects/$PROJECT_ID/secrets/VITE_FIREBASE_APP_ID/versions/latest
    env: 'VITE_FIREBASE_APP_ID'
  - versionName: projects/$PROJECT_ID/secrets/VITE_FIREBASE_MEASUREMENT_ID/versions/latest
    env: 'VITE_FIREBASE_MEASUREMENT_ID'
  - versionName: projects/$PROJECT_ID/secrets/VITE_FIREBASE_MESSAGING_SENDER_ID/versions/latest
    env: 'VITE_FIREBASE_MESSAGING_SENDER_ID'
  - versionName: projects/$PROJECT_ID/secrets/VITE_MAPS_API_KEY/versions/latest
    env: 'VITE_MAPS_API_KEY'
  - versionName: projects/$PROJECT_ID/secrets/VITE_RECAPTCHA_CHECK/versions/latest
    env: 'VITE_RECAPTCHA_CHECK'
  - versionName: projects/$PROJECT_ID/secrets/VITE_RECAPTCHA_INVISIBLE/versions/latest
    env: 'VITE_RECAPTCHA_INVISIBLE'